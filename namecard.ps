%!
/x 250 def
/y 150 def
/handlength { y 0.3 mul } def
/current { currentpoint moveto } def

% Draw one box. PARAMETER: ( X, Y ) : length of box
/box
{
    1 setlinejoin
    1 setlinecap
    x y
    0 0 moveto
    % Y 이동
    dup
    0 exch rlineto

    % X 이동
    exch
    0 rlineto

    % -Y 이동
    -1 mul
    0 exch rlineto
    closepath

    gsave
    1 0 0 setrgbcolor   
    fill
    grestore
    stroke
} def

% Draw one box. PARAMETER: ( X, Y ) : length of box
/drawCurtain
{
    /getendx
    { x 20 sub 4 div } def
    /getendy
    { y 0.85 mul } def
    getendy
    10 0 moveto
    0 exch rlineto
    
    1 1 4
    {
    pop   
    currentpoint -10 add
    currentpoint exch getendx add exch -10 add
    currentpoint exch getendx add exch
    curveto
    } for

    0 getendy -1 mul rlineto
    closepath

    gsave
    1 1 1 setrgbcolor   
    fill
    grestore
    stroke
} def

% Draw String
/drawString
{
    x y
    exch 0.44 mul % X
    exch 0.5 mul % Y
    /Courier-BoldOblique findfont
    10 scalefont
    setfont
    moveto
    (POSTSCRIPT PROGRAMMER)
    show
    

    x y
    exch 0.5 mul % X
    exch 0.4 mul % Y
    /Courier-BoldOblique findfont
    13 scalefont
    setfont
    moveto
    (Jong-in Park)
    show

    x y
    exch 0.5 mul % X
    exch 0.3 mul % Y
    /Courier-BoldOblique findfont
    9 scalefont
    setfont
    moveto
    (Software Engineering)
    show

    x y
    exch 0.5 mul % X
    exch 0.25 mul % Y
    /Courier-BoldOblique findfont
    9 scalefont
    setfont
    moveto  
    (Ajou Univ)
    show

} def

/drawhand
{
    0 0.5 1 setrgbcolor
    1 setlinecap
    3 setlinewidth
    
    % First Branch
    handlength 0.3 mul 0 rlineto
    current
    gsave
    2 setlinewidth
    -45 rotate
    handlength 0.2 mul 0 rlineto
    stroke
    grestore gsave
    2 setlinewidth
    45 rotate
    handlength 0.2 mul 0 rlineto
    stroke
    grestore

    % Second Branch
    handlength 0.2 mul 0 rlineto
    current
    gsave
    2 setlinewidth
    -45 rotate
    handlength 0.15 mul 0 rlineto
    stroke
    grestore gsave
    2 setlinewidth
    45 rotate
    handlength 0.15 mul 0 rlineto
    stroke
    grestore gsave
    1 setlinewidth
    90 rotate
    handlength 0.13 mul 0 rlineto
    stroke
    grestore gsave
    1 setlinewidth
    -90 rotate
    handlength 0.13 mul 0 rlineto
    stroke
    grestore

    % Third Branch
    handlength 0.15 mul 0 rlineto
    current
    gsave
    2 setlinewidth
    -45 rotate
    handlength 0.075 mul 0 rlineto
    stroke
    grestore gsave
    2 setlinewidth
    45 rotate
    handlength 0.075 mul 0 rlineto
    stroke
    grestore

    handlength 0.075 mul 0 rlineto

    stroke
} def

/drawhexagon
{
    0 0.5 1 setrgbcolor
    1 setlinecap
    2 setlinewidth
    dup 0 rlineto

    120 rotate
    0 rlineto
    stroke
} def

/drawPattern
{   
    % Move the origin
    /origin
    {
        x 0.25 mul
        y 0.4 mul
        moveto
        30 rotate
    } def
    origin

    0 60 359
    {
        dup dup
        gsave
        rotate
        drawhand
        grestore gsave
        rotate
        handlength 0.25 mul drawhexagon
        grestore gsave
        rotate
        0.67 0.67 scale
        handlength 0.25 mul drawhexagon
        grestore
    } for
} def

% Draw one namecard.
/nameCard
{
    gsave
    % Draw box
    box

    % Draw Curtain
    drawCurtain

    % Draw String
    drawString

    % Draw Pattern
    drawPattern
    grestore
} def

/sixnameCards
{
    50 200 translate
    0 1 2
    {
        dup
        gsave
        
        y mul 0 exch translate
        nameCard
        grestore gsave

        y mul x 1 add exch translate
        nameCard
        grestore
    } for

    showpage
} def

sixnameCards